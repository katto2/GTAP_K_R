{
    "collab_server" : "",
    "contents" : "#This file replace Energy_Estimation_KSW.gms\n## (1)Load Data and conversion factor CF (Total Energy => Net Energy)\n## (2)Convert EBS using CF\n## (3)Assign Energy consumption to IO sector \n\n################(1)Load Data#########################################\nt=2010\nD_name1=paste(paste(\"D1\",t,sep=\"_\"),\"Rdata\",sep=\".\")\nload(D_name1)\n##conversion factor\nCF=read.csv(file=file.path(\"Energy_Estimation\",\"Heatconf.csv\"), header=T,as.is=T)\n\n###############(2)Convert EBS using CF###############################\nEBS_LLH=EBS\nEBS_LLH[,!is.na(match(colnames(EBS),CF$ED))]=as.matrix(EBS[,!is.na(match(colnames(EBS),CF$ED))])%*%diag(CF$CF)\n#(2-1) Exclude international transportation from Water_t and Air_t\nGTAPBASE=1\nif (GTAPBASE==1){\nEBS_LLH[\"Water_t\",]=0 # all water transportation is international transportation\nEBS_LLH[\"Air_t\",]=EBS_LLH[\"Air_t\",]*((8483279-2431664)/8483270)\n\n#(2-2)adjusting subsums of energy demand\nEBS_LLH[\"Transport\",]=colSums(EBS_LLH[c(\"Rail_t\",\"Land_t\",\"Water_t\",\"Air_t\"),])\nEBS_LLH[\"F_con\",]=colSums(EBS_LLH[c(\"Ind\",\"Transport\",\"Residential\",\"Commercial\",\"Public\"),])\nEBS_LLH[\"P_con\",]=EBS_LLH[\"F_con\",]-EBS_LLH[\"Transform\",]\n}\n\n#(2-3)adjusting subsums of energy carrier\nEBS_LLH[,\"AnthraT\"]=rowSums(EBS_LLH[,c(\"AnthraD\",\"AnthraIm\")])\nEBS_LLH[,\"BituT\"]=rowSums(EBS_LLH[,c(\"BituCoke\",\"BituSteam\")])\nEBS_LLH[,\"CoalT\"]=rowSums(EBS_LLH[,c(\"AnthraT\",\"BituT\")])\nPetE=c(\"Gasoline\",\"Kerosene\",\"Diesel\",\"BA\",\"BB\",\"BC\",\"JA1\",\"JP4\",\"AVIG\")\nPetNE=c(\"Naphta\",\"Solvent\",\"Asphalt\",\"Lubricant\",\"ParaWax\",\"PetroCoke\",\"OtherProd\")\nEBS_LLH[,\"PetroENG\"]=rowSums(EBS_LLH[,PetE])\nEBS_LLH[,\"PetroNENG\"]=rowSums(EBS_LLH[,PetNE])\nEBS_LLH[,\"LPG\"]=rowSums(EBS_LLH[,c(\"Propane\",\"Butane\")])\nEBS_LLH[,\"PetroT\"]=rowSums(EBS_LLH[,c(\"PetroENG\",\"LPG\",\"PetroNENG\")])\nEBS_LLH[,\"TotalE\"]=rowSums(EBS_LLH[,c(\"CoalT\",\"PetroT\",colnames(EBS_LLH[,(30:36)]))])\n\n#################(3)Matching energy balance with IO Energy industry##################################\n\n##IO Energy industries (384 industry)\n#0026           \"Anthracite\"\n#0027           \"Bituminous coal\"\n#0028           \"Crude petroleum\"\n#0029           \"Natural gas\"\n#0100           \"Coal briquettes\"\n#0099           \"Coke and other coal products\"\n#0101           \"Naphtha\"\n#0102           \"Gasoline\"\n#0103           \"Jet oil\"\n#0104           \"Kerosene\"\n#0105           \"Light oil\"\n#0106           \"Heavy oil\"\n#0107           \"Liquefied petroleum gas\"\n#0108           \"Refined mixture for fuel oil\"\n#0109           \"Lubricants and Grease\"\n#0110           \"Misc. petroleum refinery products\"\n#0274           \"Hydro power generation\"\n#0275           \"thermal power generation\"\n#0276           \"nuclear power generation\"\n#0277           \"self generation electricity\"\n#0278           \"New Renewable Energy\"\n#0279           \"Manufactured gas supply\"\n#0280           \"Steam and hot water supply\"\n\ncon_totB=data.frame(rowSums(A_T_B_384)+F_T_B_384[,\"Final_Pc\"])\ncon_ene=data.frame(rep(0,dim(ENGind_index)[1]))\nrownames(con_ene)=ENGind_index$basecode_col\ncolnames(con_ene)=\"con_ene\"\n\nrownames(con_totB)=paste(\"X\",(1:384),sep=\"\")\ncolnames(con_totB)=\"con_totB\"\n\ncon_ene[\"X26\",]=EBS_LLH[\"P_con\",\"AnthraT\"]\ncon_ene[\"X27\",]=EBS_LLH[\"P_con\",\"BituT\"]\ncon_ene[\"X29\",]=EBS_LLH[\"P_con\",\"LNG\"]\ncon_ene[\"X100\",]=EBS_LLH[\"Residential\",\"AnthraT\"]\ncon_ene[\"X101\",]=EBS_LLH[\"P_con\",\"Naphta\"]\ncon_ene[\"X102\",]=EBS_LLH[\"P_con\",\"Gasoline\"]\ncon_ene[\"X103\",]=EBS_LLH[\"P_con\",\"JA1\"]#JP-4 is for military use AVI-G is used in small airplanes not using jet engine\ncon_ene[\"X104\",]=EBS_LLH[\"P_con\",\"Kerosene\"]\ncon_ene[\"X105\",]=EBS_LLH[\"P_con\",\"Diesel\"]\ncon_ene[\"X106\",]=sum(EBS_LLH[\"P_con\",c(\"BA\",\"BB\",\"BC\")])\ncon_ene[\"X107\",]=EBS_LLH[\"P_con\",\"LPG\"]\ncon_ene[\"X108\",]=EBS_LLH[\"P_con\",\"Lubricant\"]*con_totB[\"X108\",]/sum(con_totB[c(\"X108\",\"X109\"),])\ncon_ene[\"X109\",]=EBS_LLH[\"P_con\",\"Lubricant\"]*con_totB[\"X109\",]/sum(con_totB[c(\"X108\",\"X109\"),])\ncon_ene[\"X110\",]=sum(EBS_LLH[\"P_con\",c(\"PetroCoke\",\"OtherProd\")])\ncon_ene[\"X274\",]=EBS_LLH[\"P_con\",\"Hydro\"]*(860/2150)\ncon_ene[\"X276\",]=EBS_LLH[\"P_con\",\"Nuclear\"]*(860/2150)\ncon_ene[\"X279\",]=EBS_LLH[\"P_con\",\"LNG\"]\n#LNG energy double counting. In IO, LNG is used 100% in City gas production. But in E_balance LNG is used in electricity generation.\n#con_ene[\"X29\",]=EBS_LLH[\"P_con\",\"LNG\"] This energy is LNG used in City Gas\n#con_ene[\"X279\",]=EBS_LLH[\"P_con\",\"LNG\"] This energy is energy used in City Gas form. But this also includes LNG in electricity generation.\n\n#Heat = Steam and Hot Warter\nHeatE=data.frame(EBS_LLH[,\"Heat\"])\nrownames(HeatE)=rownames(EBS_LLH)\ncolnames(HeatE)=\"Heat\"\nE_Exit=c(\"Export\",\"IntBunk\",\"Stock_d\")\nE_Transf=c(\"E_Gene\",\"Heating\",\"Gas_Manu\",\"OwnUse\")\n\ncon_ene[\"X280\",]=HeatE[\"F_con\",]-sum(HeatE[E_Exit,])-(sum(HeatE[E_Transf,]*as.numeric(HeatE[E_Transf,]<0)))\n\n## We add non electricity renewables to Heat and Hot water (b/c we add all renewable P_con to Heat in 2005 version)\ncon_ene[\"X280\",]=con_ene[\"X280\",]+EBS_LLH[\"P_con\",\"Renewable\"]+EBS_LLH[\"E_Gene\",\"Renewable\"]*(as.numeric(EBS_LLH[\"E_Gene\",\"Renewable\"]<0))\n\n# Coke and other coal product Energy\n#= Bituminous coal E used in the form of other prodcuts \n#= Bituminous coal E not used in Generation \n#* Money used in Other product production for Bituminous coal/Money used for Bitumious coal except for generation\n\ncon_ene[\"X99\",]=sum(EBS_LLH[c(\"P_con\",\"E_Gene\"),\"BituT\"])*A_T_B_384[27,99]/(con_totB[\"X27\",]-A_T_B_384[27,275])\n\n# Thermal power generation and self generation = E generation -Hydro - Nuclear - Renewable generation\n## Thermal power generatin = E generation -Hydro - Nuclear - Renewable generation Energy *(Money Spent in thermal power)/Money Spent in thermal power and self-generation\n## self generatin = E generation -Hydro - Nuclear - Renewable generation Energy *(Money Spent in self generation)/Money Spent in thermal power and self-generation\n\nElecE=data.frame(EBS_LLH[,\"Elect\"])\nrownames(ElecE)=rownames(EBS_LLH)\ncolnames(ElecE)=\"ElecE\"\n\nElec_Fossil=ElecE[\"F_con\",]-sum(ElecE[E_Exit,])-(sum(ElecE[E_Transf,]*as.numeric(ElecE[E_Transf,]<0))) - con_ene[\"X274\",]-con_ene[\"X276\",]+EBS_LLH[\"E_Gene\",\"Renewable\"]*as.numeric(EBS_LLH[\"E_Gene\",\"Renewable\"]<0)\n\ncon_ene[\"X275\",]=Elec_Fossil*con_totB[\"X275\",]/sum(con_totB[c(\"X275\",\"X277\"),])\ncon_ene[\"X277\",]=Elec_Fossil*con_totB[\"X277\",]/sum(con_totB[c(\"X275\",\"X277\"),])\n\n\n# Renewable energy : Previously assigned to heat. Now we assign renewable energy demand in Electricity to Renewable industry b/c renewable in 2010 IO only covers electricity generation.\n\n#con_ene[\"X278\",]=EBS_LLH[\"P_con\",\"Renewable\"]\ncon_ene[\"X278\",]=-1*EBS_LLH[\"E_Gene\",\"Renewable\"]\nE_name1=paste(paste(\"IO_E\",t,sep=\"_\"),\"Rdata\",sep=\".\")\n\nsave(list=ls(), file=E_name1)\n",
    "created" : 1474037515411.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1162663777",
    "id" : "849BE0CC",
    "lastKnownWriteTime" : 1436345620,
    "last_content_update" : 1436345620,
    "path" : "C:/work_2016/0000_Hybrid_2nd/CGE/SAM/GTAP_K_R/Energy_Estimation/EnergyIO_1.r",
    "project_path" : "Energy_Estimation/EnergyIO_1.r",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}